import { useState, useRef } from "react";

const InputTracker = () => {

    console.log("Component Rendered!");
    
  const [text, setText] = useState(""); // üîπ State (Rerender ‡¶π‡¶¨‡ßá)
  const prevTextRef = useRef(""); // üîπ Mutable value (Rerender ‡¶π‡¶¨‡ßá ‡¶®‡¶æ)
  const inputRef = useRef(null); // üîπ Input field reference

  const handleChange = (e) => {
    prevTextRef.current = text; // ‚úÖ ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ (Rerender ‡¶π‡¶¨‡ßá ‡¶®‡¶æ)
    setText(e.target.value); // ‚úÖ ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡¶æ‡¶® state-‡¶è ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ (Rerender ‡¶π‡¶¨‡ßá)
  };

  const focusInput = () => {
    inputRef.current.focus(); // ‚úÖ Input field-‡¶è ‡¶´‡ßã‡¶ï‡¶æ‡¶∏ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶¨‡ßá (Rerender ‡¶π‡¶¨‡ßá ‡¶®‡¶æ)
  };

  return (
    <div>
      <input
        ref={inputRef}
        type="text"
        value={text}
        onChange={handleChange}
      />
      <h2>Current Value: {text}</h2>
      <h2>Previous Value (without rerendering): {prevTextRef.current}</h2>
      <button onClick={focusInput}>Focus Input</button>
    </div>
  );
};

export default InputTracker;
